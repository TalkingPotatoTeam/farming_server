# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
 
    - name: Make Secret File
      env:
        DB_URL: ${{ secrets.DB_URL }}
        DB_USERNAME:  ${{ secrets.DB_USERNAME }}
        DB_PASSWORD:  ${{ secrets.DB_PASSWORD }}
        JWT_SECRET: ${{secrets.JWT_SECRET }}
        JWT_REFRESH_SECRET: ${{secrets.JWT_REFRESH_SECRET }}
        SECRET_DIR: src/main/resources
        FILE_NAME: application-dev.properties
      run: |
        echo "DB_URL=$DB_URL" >> $SECRET_DIR/$FILE_NAME
        echo "DB_USERNAME=$DB_USERNAME" >> $SECRET_DIR/$FILE_NAME
        echo "DB_PASSWORD=$DB_PASSWORD" >> $SECRET_DIR/$FILE_NAME
        echo "JWT_SECRET=$JWT_SECRET" >> $SECRET_DIR/$FILE_NAME
        echo "JWT_REFRESH_SECRET=$JWT_REFRESH_SECRET" >> $SECRET_DIR/$FILE_NAME
        
    - name: Secret File Context Check
      run: cat src/main/resources/application-dev.properties
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew bootJar
      
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag farming-api:latest

    - name: tagging to docker image
      run: docker tag farming-api:latest ${{ secrets.DOCKERHUB_USERNAME }}/farming-api:latest

    - name: push to docker hub
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/farming-api:latest
      
    - name: Make Deploy Dir
      run: mkdir -p deploy

    - name: Copy appspec yml
      run: cp appspec.yml ./deploy
      
    - name: make excutable
      run : chmod +x ./scripts/*.sh

    - name : Copy scripts
      run : cp -r ./scripts ./deploy
     
    - name: Make zip
      run: zip -r ./farming-api.zip ./deploy
      
      
    
    - name : Check zip file
      run : ls
           
    - name: Aws credential config
      uses: aws-actions/configure-aws-credentials@v1
      with: 
        aws-access-key-id: ${{ secrets.AWS_IAM_ACCESS_ID }}
        aws-secret-access-key: ${{ secrets.AWS_IAM_ACCESS_KEY }}
        aws-region: ap-northeast-2
         
    - name: Upload S3
      run: aws s3 cp --region ap-northeast-2 --acl private  ./farming-api.zip s3://hs-deploy-test-buc/
      
  
    - name: Code Deploy
      run: |
        aws deploy create-deployment \
        --application-name test-codedeploy \
        --deployment-config-name CodeDeployDefault.AllAtOnce \
        --deployment-group-name deploy-test-group \
        --s3-location bucket=hs-deploy-test-buc,bundleType=zip,key=farming-api.zip \
        --region ap-northeast-2
